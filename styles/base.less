@import "syntax-variables";

* {
  cursor: crosshair;
}

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: white;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  // background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
  color: @white;
  background-color: @orbit;
  text-shadow: 0 0 2px @cyan;
}

.keyword {
  color: @syntax-text-color; // C# "using System.Collections;"

  &.control {
    color: @syntax-text-color-dark;
  }
  &.operator {
    color: @syntax-text-color; // Signs like "=" and ":"
  }

  &.other.special-method {
    color: @white;
  }

  &.other.unit { // CSS "px"
    color: @color-nine;
    background-color: @betagray;
  }
}

.storage {
  color: @syntax-text-color-dark; // C# class declaration type (void, public etc)
}

.constant {
  color: @color-nine; // C# bools, CSS options - "block" etc.
  background-color: @betagray;


  &.character.escape {
    color: @syntax-text-color-dark;
  }

  &.numeric {
    color: @color-nine; // C# Ints etc
    background-color: @betagray;
  }

  &.other.color {
    color: @syntax-text-color-dark;
  }

  &.other.symbol {
    color: @syntax-text-color-dark; //?
  }
}

.variable {
  color: @color-eight;

  &.interpolation {
    color: darken(@color-eight, 10%);
  }

  &.parameter.function {
    color: @color-eight;
  }
}

.invalid.illegal {
  color: @pink;
  box-shadow: 2px 2px 1px @pink;
}

.string {
  color: @color-four; // String


  &.regexp {
    color: @syntax-text-color-dark;

    .source.ruby.embedded {
      color: @white;
    }
  }

  &.other.link {
    color: @syntax-text-color-dark;
  }
}

.punctuation {
  &.definition {
    &.comment {
      color: @color-three; // CSS Comment syntax
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      color: @color-two;
    }

    &.heading,
    &.identity {
      color: @white;
    }

    &.bold {
      color: @white;
      font-weight: bold;
    }

    &.italic {
      color: @white;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: @syntax-text-color-dark; //PHP open + closing
  }

}

.support {
  &.class {
    color: @white;
  }

  &.function  {
    color: @syntax-text-color-dark;

    &.any-method {
      color: @white;
    }
  }
}

.entity {
  &.name.function { // C# Function names
    color: @color-ten;
    background-color: rgba(0, 0, 0, 0.05);
  }
  &.name.type {
    color: @color-eleven; // C# Class name
    // background-color: rgba(0, 0, 0, 0.1);
    // text-decoration: underline; // C# Class name
  }

  &.other.inherited-class {
    color: @syntax-text-color-dark;
  }
  &.name.class, &.name.type.class {
    color: @color-eleven; // C# Class name (overrides above)
  }

  &.name.section {
    color: @white;
  }

  &.name.tag { // HTML Tags
    color: @color-six;
    background-color: @betagray;
  }

  &.other.attribute-name {
    color: @color-eight; //HTML "href"/"name"/"charset" etc
    // background-color: black;

    &.id {
      color: @color-twelve; // CSS IDs
    }
  }
}

.meta {
  &.class {
    color: @syntax-text-color; // Essentially all C# text
  }

  &.link {
    color: @white;
  }

  &.require {
    color: @white;
  }

  &.selector {
    color: @white; //?
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color-dark; //?
  }
}

.none {
  color: @syntax-text-color-dark; //?
}

.markup {
  &.bold {
    color: @white;
    font-weight: bold;
  }

  &.changed {
    color: @syntax-text-color-dark;
  }

  &.deleted {
    color: @syntax-text-color-dark;
  }

  &.italic {
    color: @syntax-text-color-dark;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @white;
  }

  &.inserted {
    color: @syntax-text-color-dark;
  }

  &.list {
    color: @white;
  }

  &.quote {
    color: @white;
  }

  &.raw.inline {
    color: @syntax-text-color-dark;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @syntax-text-color-dark;
  }
}

// MINIMAP COLORING

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}

atom-text-editor atom-text-editor-minimap::shadow .minimap-visible-area::after,
atom-text-editor::shadow atom-text-editor-minimap::shadow .minimap-visible-area::after {
  background-color: fade(@white, 25%);
}

// BRACKET MATCHER

.bracket-matcher {
    border-bottom: none;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.0);
}


atom-text-editor::shadow  .bracket-matcher .region {
    border-bottom: none;
    background-color: none;
    box-shadow: 0 0 50px 20px rgba(40,255,240,0.5);
}

// TAB COLORING

.tab-bar .tab[data-type="TextEditor"]::after {
  background-color: fade(@white, 15%);
}


//SCROLLBARS
::-webkit-scrollbar { //BACKGROUND OF SCROLLBAR
    visibility: hidden;
    width: 3px;
}
::-webkit-scrollbar-track {/*SCROLLBAR Track background */
    -webkit-box-shadow: inset 0 0 6px rgba(0,255,0,0.3);
    -webkit-border-radius: 0px;
    border-radius: 0px;
    visibility: hidden;
    width: 3px;
}
::-webkit-scrollbar-track-piece  {
    visibility: hidden;
    background-color: blue;
    width: 3px;
}
::-webkit-scrollbar-button {  //arrows on ends
    visibility: hidden;
}
::-webkit-scrollbar-thumb { //HANDLE OF SCROLLBAR
    background-color: rgba(255,0,200,0.4) !important;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);
    -webkit-border-radius: 100%;
    width: 3px;
}
::-webkit-scrollbar-thumb:hover, .scrollbars-visible-always /deep/ ::-webkit-scrollbar-button:hover {
    background-color: rgba(255,0,200,0.5) !important;
}
::-webkit-scrollbar-thumb:window-inactive {
    background-color: rgba(155,0,100,0.4) !important;
}
::-webkit-scrollbar-corner { //BOTTOM RIGHT CORNER BLOCK DOES NOTHING
    visibility: hidden;
    overflow: hidden;
}
atom-text-editor .vertical-scrollbar { //NECESSARY
    pointer-events: none;
    width: 3px;
}
atom-text-editor .horizontal-scrollbar { //NECESSARY
  visibility: hidden;
  pointer-events: none;
}
::-webkit-resizer {
  background-color: lime;
}


//STATUS BAR
status-bar.status-bar {
    line-height: 1.0rem;
    height: 1.0rem;
}

//TAB BAR
atom-pane-container atom-pane .tab-bar {
    height: 1.0rem;
    background-color: #333;
}
li tab.sortable {
    line-height: 1.0rem !important;
}
li div .title .icon .icon-tools {
  line-height: 1.0rem !important;
  height: 1.0rem !important;
}
.tab-bar .tab .close-icon, .tab-bar .tab.modified:not(:hover) .close-icon {
  display: none !important;
}
.texteditor .tab .sortable {
  line-height: 1.0rem !important;
}
body > atom-workspace > atom-workspace-axis > atom-workspace-axis > atom-pane-container > atom-pane > ul > li.texteditor.tab.sortable.modified > div.title {
  line-height: 1.0rem !important;
}
body >
body > atom-workspace > atom-workspace-axis > atom-workspace-axis > atom-pane-container > atom-pane > ul > li.texteditor.tab.sortable.modified {
  line-height: 1.0rem !important;
  height: 1.0rem !important;
  background-color: #aa2299 !important;
}

//MINIMAP SCROLLBAR
atom-text-editor atom-text-editor-minimap .minimap-visible-area::after, html atom-text-editor-minimap .minimap-visible-area::after {
    background-color: rgba(255,0,200,0.3) !important;
    pointer-events: none;
}

//TREE VIEW
.tree-view.list-tree *::before {
    content: none !important;
    visibility: hidden !important;
}
.tree-view.list-tree {
    background-color: #000;
}

.tree-view-resizer {
    border-right: 3px solid #333;
    min-width: 15vw;
}
ol.entries.list-tree {
    padding: 0 !important;
}
// .tree-view .project-root.directory span.name.icon.icon-file-directory {
//     margin-left: 0 !important;
//     text-transform: none !important;
// }
// .tree-view.list-tree > .project-root.directory > .header .name {
//     margin-left: 0rem;
//     text-transform: lowercase;
// }
// ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel  li.directory.entry.list-nested-item.project-root.expanded  div.header.list-item.project-root-header  span.name.icon.icon-file-directory {
//     background-color: #333 !important;
//     margin-left: 0 !important;
//     text-transform: none !important;
// }
// span.name.icon.icon-file-directory {
//   margin-left: 0 !important;
// }
// ol.tree-view > li.expanded > div.project-root-header > span.name {
//   margin-left: 0 !important;
// }

//FOLDABLE FUNCTION ARROWS IN LINE NUMBERING BAR
div.line-number.foldable {
  color: #888;
}
atom-text-editor .fold-marker {
    cursor: pointer;
}
atom-text-editor .fold-marker::after {
    content: "  \25BC\25BC\25BC   ";
    color: rgba(255,0,200,0.3);
}
div.icon-right::before {
    content: "\25BC";
    color: magenta;
}
//TAB BAR
.tab-bar .tab {
  font-size: x-small;
  padding: 3px;
  color: #777;
}
.tab-bar .tab .title {
  font-size: 0.8em;
  color: grey;
  font-weight: 100;
  padding: 0;
}
